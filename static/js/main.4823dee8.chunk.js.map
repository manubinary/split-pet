{"version":3,"sources":["initial-data.js","list.js","pet.js","App.js","reportWebVitals.js","index.js"],"names":["initialData","initiallists","id","name","image","Container","styled","div","List","className","draggableId","this","props","list","index","provided","draggableProps","dragHandleProps","ref","innerRef","src","React","Component","Title","h3","NameList","Day","DayInner","Pet","droppableId","droppableProps","lists","map","placeholder","monday","tuesday","wednesday","thursday","friday","App","state","onDragEnd","result","destination","initial","source","currentIndex","findIndex","item","length","push","setState","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4823dee8.chunk.js","sourcesContent":["const initialData = {\r\n    initiallists: [\r\n        {id: \"1\", name: 'Rob', image: '1.png'},\r\n        {id: \"2\", name: 'John', image: '2.jpg'},\r\n        {id: \"3\", name: 'Sam', image: '3.jpg'},\r\n        {id: \"4\", name: \"Deric\", image:'4.jpg'},\r\n        {id: \"5\", name: 'Dan', image: '5.jpg'},\r\n        {id: \"6\", name: 'Marc', image: '6.jpg'},\r\n        {id: \"7\", name: 'Rooth', image: '7.jpg'}\r\n    ]\r\n};\r\n\r\nexport default initialData;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\n    margin: 4px;\r\n    /* border: 1px solid lightgrey; */\r\n    border-radius: 2px;\r\n    padding: 8px;\r\n    background-color: white;\r\n`;\r\n\r\nexport default class List extends React.Component {\r\n  render() {\r\n    return (\r\n        <div className=\"elementContainer\">\r\n            <div className=\"name\">\r\n                <Draggable draggableId={this.props.list.id} index={this.props.index}>\r\n                    {provided => (\r\n                        <Container {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} >\r\n                          {this.props.list.name}\r\n                          <div className=\"image\">\r\n                            <img className=\"img\" src={\"https://raw.githubusercontent.com/manubinary/split-pet/master/public/images/\" + this.props.list.image} />\r\n                          </div>\r\n                        </Container>\r\n                    )}\r\n                </Draggable>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport List from './list';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\n    margin: 8px;\r\n    border-radius: 2px;\r\n    height: auto;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    padding: 8px;\r\n`;\r\n\r\nconst NameList = styled.div`\r\n    padding: 8px;\r\n    width: 350px;\r\n    height: 200px;\r\n`;\r\n\r\nconst Day = styled.div`\r\n    margin: 8px;\r\n    border: 1px solid #000;\r\n}\r\n`;\r\n\r\nconst DayInner = styled.div`\r\n    height: 300px;\r\n`;\r\n\r\nexport default class Pet extends React.Component {\r\n  render() {\r\n    return (\r\n        <Container>\r\n            <div className=\"main\">\r\n                <div className=\"left\">\r\n                    <Title>Pets</Title>\r\n                    <Droppable droppableId=\"initiallists\">\r\n                        {(provided) => (\r\n                            <div className=\"initial\">\r\n                                <NameList\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                >\r\n                                    {this.props.lists.map((list, index) => (\r\n                                        <List key={list.id} list={list} index={index} />\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </NameList>\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </div>\r\n                <div className=\"right\">\r\n                  <Title>Assigned</Title>\r\n                  <Day>\r\n                        <Title>Monday</Title>\r\n                        <Droppable droppableId=\"monday\">\r\n                        {(provided) => (\r\n                            <NameList\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                            >\r\n                                <DayInner>\r\n                                    {this.props.monday.map((list, index) => (\r\n                                        <List key={list.id} list={list} index={index} />\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </DayInner>\r\n                            </NameList>\r\n                        )}\r\n                        </Droppable>\r\n                    </Day>\r\n                    <Day>\r\n                        <Title>Tuesday</Title>\r\n                        <Droppable droppableId=\"tuesday\">\r\n                        {(provided) => (\r\n                            <NameList\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                            >\r\n                                <DayInner>\r\n                                    {this.props.tuesday.map((list, index) => (\r\n                                        <List key={list.id} list={list} index={index} />\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </DayInner>\r\n                            </NameList>\r\n                        )}\r\n                        </Droppable>\r\n                    </Day>\r\n                    <Day>\r\n                        <Title>Wednesday</Title>\r\n                        <Droppable droppableId=\"wednesday\">\r\n                        {(provided) => (\r\n                            <NameList\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                            >\r\n                                <DayInner>\r\n                                    {this.props.wednesday.map((list, index) => (\r\n                                        <List key={list.id} list={list} index={index} />\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </DayInner>\r\n\r\n                            </NameList>\r\n                        )}\r\n                        </Droppable>\r\n                    </Day>\r\n                    <Day>\r\n                        <Title>Thursday</Title>\r\n                        <Droppable droppableId=\"thursday\">\r\n                        {(provided) => (\r\n                            <NameList\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                            >\r\n                                <DayInner>\r\n                                    {this.props.thursday.map((list, index) => (\r\n                                        <List key={list.id} list={list} index={index} />\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </DayInner>\r\n\r\n                            </NameList>\r\n                        )}\r\n                        </Droppable>\r\n                    </Day>\r\n                    <Day>\r\n                        <Title>Friday</Title>\r\n                        <Droppable droppableId=\"friday\">\r\n                        {(provided) => (\r\n                            <NameList\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                            >\r\n                                <DayInner>\r\n                                    {this.props.friday.map((list, index) => (\r\n                                        <List key={list.id} list={list} index={index} />\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </DayInner>\r\n\r\n                            </NameList>\r\n                        )}\r\n                        </Droppable>\r\n                    </Day>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport initialData from './initial-data';\nimport Pet from './pet.js';\nimport '@atlaskit/css-reset';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nclass App extends React.Component {\n  state = {\n    initiallists: initialData.initiallists,\n    monday: [],\n    tuesday: [],\n    wednesday: [],\n    thursday: [],\n    friday: []\n  };\n\n\n  onDragEnd = result => {\n    if (result.destination !== null) {\n      let initial = this.state[result.source.droppableId];\n      const currentIndex = initial.findIndex(item => item.id === result.draggableId);\n      if (currentIndex >= 0 && (this.state[result.destination.droppableId].length === 0 || result.destination.droppableId === 'initiallists')) {\n        const destination = this.state[result.destination.droppableId];\n        destination.push(initial[currentIndex]);\n        this.setState({\n          [result.destination.droppableId]: destination\n        });\n        initial.splice(currentIndex, 1);\n        this.setState({\n          [result.source.droppableId]: initial\n        })\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"header\">Simple Drag and Drop App</h1>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Pet key=\"columnid\"\n            lists={this.state.initiallists}\n            monday={this.state.monday}\n            tuesday={this.state.tuesday}\n            wednesday={this.state.wednesday}\n            thursday={this.state.thursday}\n            friday={this.state.friday}\n            />;\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}